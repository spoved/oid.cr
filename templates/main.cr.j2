require "oid"
require "oid/{{ gfx_lib }}"
require "./components"
require "./config"
require "./systems/*"

::Log.builder.clear
spoved_logger(:debug, bind: true)

create_feature {{ name_module }}, [
  {{ name_module }}::InputSystem,
  {{ name_module }}::WorldSystem,

  # ////////////////////////////////////////////////////
  # TODO: Place any services created here
  # ////////////////////////////////////////////////////
]

class AppController < Entitas::Controller
  include Oid::Controller::Helper

  getter services = Oid::Services.new(
    application: {{ gfx_class }}::ApplicationService.new,
    logger: {{ gfx_class }}::LoggerService.new,
    input: {{ gfx_class }}::InputService.new,
    config: {{ name_module }}::ConfigService.new(**CONFIG),
    time: {{ gfx_class }}::TimeService.new,
    view: {{ gfx_class }}::ViewService.new,
    camera: {{ gfx_class }}::CameraService.new,
    window: {{ gfx_class }}::WindowService.new
  )

  def create_systems(contexts : Contexts)
    Entitas::Feature.new("Systems")
      .add(Oid::ServiceRegistrationSystems.new(contexts, services))
      .add(OidSystems.new(contexts))
      .add({{ name_module }}Systems.new(contexts))
  end
end

controller = AppController.new
controller.start

# Enable this if you would like to use the entitas debug server
# spawn do
#   controller.start_server
# end

window_controller = controller.contexts.app.window.value

while !window_controller.should_close?
  controller.update
  Fiber.yield
end
