require "../../src/oid"
require "../../src/oid/{{ gfx_lib }}/*"
require "./components"
require "./config"
require "./systems/*"

create_feature {{ name_module }}, [
  {{ name_module }}::InputSystem,
  {{ name_module }}::WorldSystem,

  # ////////////////////////////////////////////////////
  # TODO: Place any services created here
  # ////////////////////////////////////////////////////
]

class {{ name_module }}::ApplicationService
  include Oid::Service::Application
end

class GameController < Entitas::Controller
  getter services = Services.new(
    application: {{ name_module }}::ApplicationService.new,
    logger: {{ gfx_class }}::LoggerSystem.new,
    input: {{ gfx_class }}::InputSystem.new,
    config: {{ gfx_class }}::ConfigSystem.new,
    time: {{ gfx_class }}::TimeSystem.new,
    view: {{ gfx_class }}::ViewSystem.new,
  )

  def create_systems(contexts : Contexts)
    Entitas::Feature.new("Systems")
      .add(ServiceRegistrationSystems.new(contexts, services))
      .add(Game::EventSystems.new(contexts))
      .add(OidSystems.new(contexts))
      .add({{ name_module }}Systems.new(contexts))
  end
end

controller = GameController.new

app = {{ gfx_class }}::Application.new("{{ name_raw }}")

app.start(
  controller: controller,
  init_hook: ->(cont : GameController) {},
  draw_hook: ->(cont : GameController) {},
)
