module: RayLib

# library: "%/ext/raylib/src/libraylib.a %/ext/raylib/src/external/glfw/src/libglfw3.a"
library: "%/ext/raylib/src/libraylib.dylib"

generators:
  cpp:
    output: ext/raylib_bindings.cpp
    preamble: |-
      #include "bindgen_helper.hpp"
      #define RAYGUI_IMPLEMENTATION
      #define RAYGUI_SUPPORT_RICONS
  crystal:
    output: src/raylib/binding/binding.cr

<<: config/find_paths.yml

types:
  <<: config/types.yml
  <<: config/raylib/types.yml

<<: config/raylib/enums.yml
<<: config/raylib/classes.yml
<<: config/raylib/macros.yml

functions:
  <<: config/raylib/functions/camera.yml
  ".*":
    destination: "::"

parser:
  if_BINDGEN_CLANG_BIN_isnt_:
    binary: "./{BINDGEN_CLANG_BIN}"
  flags:
    - "-x"
    - "c++"
    - "-std=c++11"

  files:
    - raylib.h
  includes:
    - "%"
    - "%/raylib/src/"
    - "{LLVM_INCLUDES}"
  defines:
    - __STDC_CONSTANT_MACROS
    - __STDC_LIMIT_MACROS
    - PLATFORM_DESKTOP
    - GRAPHICS_API_OPENGL_33
    - GL_SILENCE_DEPRECATION
    - __LLVM_VERSION_${LLVM_VERSION}
    - __OS_TYPE_${OS_TYPE}
